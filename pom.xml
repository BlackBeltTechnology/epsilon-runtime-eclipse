<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>

    <groupId>hu.blackbelt.epsilon</groupId>
    <artifactId>hu.blackbelt.epsilon.runtime.site</artifactId>
	<packaging>pom</packaging>
    <version>${revision}</version>

	<name>Epsilon :: Runtime :: Eclipse</name>

	<description>Epsilon runtime Parent</description>

	<url>http://github.com/${project-repositoryId}</url>

	<issueManagement>
		<url>https://github.com/${project-repositoryId}/issues</url>
		<system>GitHub Issues</system>
	</issueManagement>

	<scm>
		<connection>scm:git:git@github.com:${project-repositoryId}.git</connection>
		<!--suppress UnresolvedMavenProperty -->
		<developerConnection>scm:git:ssh://${git.username}@github.com:${project-repositoryId}.git
        </developerConnection>
		<url>http://github.com/${project-repositoryId}</url>
	</scm>

    <developers>
        <developer>
            <id>robson</id>
            <name>Róbert Csákány</name>
            <email>robert.csakany@blackbelt.hu</email>
            <url>https://github.com/robertcsakany</url>
            <organization>BlackBelt Technology</organization>
            <organizationUrl>http://www.blackbelt.hu</organizationUrl>
        </developer>
    </developers>

	<licenses>
		<license>
			<name>Eclipse Public License 2.0</name>
			<url>https://www.eclipse.org/org/documents/epl-2.0/EPL-2.0.txt</url>
		</license>
	</licenses>

	<properties>
	    <revision>1.5.4-SNAPSHOT</revision>
        <maven>3.9.4</maven>

        <project-shortname>epsilon-runtime-eclipse</project-shortname>
        <project-repositoryId>BlackBeltTechnology/epsilon-runtime-eclipse</project-repositoryId>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<timestamp>${maven.build.timestamp}</timestamp>
		<maven.build.timestamp.format>yyyyMMddHHmmss</maven.build.timestamp.format>

		<epsilon-version>2.4.0.202203041826</epsilon-version>
		<epsilon-runtime-version>1.5.1.20230826_194510_c3f1e0d5_feature_JNG_5144_ReplaceLogger</epsilon-runtime-version>

		<maven.compiler.source>17</maven.compiler.source>
		<maven.compiler.target>17</maven.compiler.target>

		<tycho-version>4.0.1</tycho-version>

		<!--suppress UnresolvedMavenProperty -->
		<logback-test-config>${maven.multiModuleProjectDirectory}/logback-test.xml</logback-test-config>

		<surefire-version>3.0.0-M7</surefire-version>
		<pax-exam-version>4.13.4</pax-exam-version>

		<!-- Code Quality-->
		<sonar-maven-plugin-version>3.9.1.2184</sonar-maven-plugin-version>
		<project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
		<sonar.java.coveragePlugin>jacoco</sonar.java.coveragePlugin>
		<sonar.language>java</sonar.language>
		<sonar.java.source>${java.version}</sonar.java.source>
		<jacoco.version>0.8.8</jacoco.version>

	</properties>
	
    <repositories>

    	<repository>
    		<id>eclipse-epsilon</id>
    		<url>https://download.eclipse.org/epsilon/updates/2.4</url>
    		<layout>p2</layout>
    	</repository>

    	<repository>
    		<id>eclipse-license</id>
    		<url>https://download.eclipse.org/cbi/updates/license</url>
    		<layout>p2</layout>
    	</repository>

    	<repository>
    		<id>eclipse-release</id>
    		<url>https://download.eclipse.org/releases/2022-12</url>
    		<layout>p2</layout>
    	</repository>
    </repositories>

	<dependencies>
		<dependency>
			<groupId>ch.qos.logback</groupId>
			<artifactId>logback-classic</artifactId>
			<version>1.2.11</version>
		</dependency>
	</dependencies>

    <build>
		<pluginManagement>
			<plugins>
				<plugin>
					<groupId>org.jacoco</groupId>
					<artifactId>jacoco-maven-plugin</artifactId>
					<version>${jacoco.version}</version>
				</plugin>

				<plugin>
					<groupId>org.sonarsource.scanner.maven</groupId>
					<artifactId>sonar-maven-plugin</artifactId>
					<version>${sonar-maven-plugin-version}</version>
				</plugin>

				<plugin>
					<groupId>org.projectlombok</groupId>
					<artifactId>lombok-maven-plugin</artifactId>
					<version>1.18.20.0</version>
					<configuration>
						<sourceDirectory>${project.basedir}/src/main/java</sourceDirectory>
						<outputDirectory>${project.basedir}/target/delombok</outputDirectory>
						<addOutputDirectory>false</addOutputDirectory>
					</configuration>
					<executions>
						<execution>
							<phase>generate-sources</phase>
							<goals>
								<goal>delombok</goal>
							</goals>
						</execution>
					</executions>
					<dependencies>
						<dependency>
							<groupId>org.projectlombok</groupId>
							<artifactId>lombok</artifactId>
							<version>1.18.24</version>
						</dependency>
					</dependencies>
				</plugin>

				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-javadoc-plugin</artifactId>
					<version>3.4.1</version>
					<configuration>
						<source>8</source>
						<doclint>none</doclint>
						<failOnError>false</failOnError>
						<detectJavaApiLink>false</detectJavaApiLink>
						<tags>
							<tag>
								<name>model</name>
								<placement>a</placement>
								<head>EMF Model</head>
							</tag>
							<tag>
								<name>generated</name>
								<placement>a</placement>
								<head>EMF Generated</head>
							</tag>
							<tag>
								<name>ordered</name>
								<placement>a</placement>
								<head>EMF Ordered</head>
							</tag>
							<tag>
								<name>param</name>
								<placement>a</placement>
								<head>EMF Param</head>
							</tag>
						</tags>
					</configuration>
					<executions>
						<execution>
							<id>attach-javadocs</id>
							<goals>
								<goal>jar</goal>
							</goals>
						</execution>
					</executions>
				</plugin>

				<plugin>
					<artifactId>maven-surefire-plugin</artifactId>
					<version>${surefire-version}</version>
					<configuration>
						<argLine>-Dfile.encoding=UTF-8</argLine>
						<trimStackTrace>false</trimStackTrace>
						<systemPropertyVariables>
							<logback.configurationFile>${logback-test-config}</logback.configurationFile>
						</systemPropertyVariables>
						<argLine>
							-Dfile.encoding=UTF-8
							--add-opens java.base/java.lang=ALL-UNNAMED
							--add-opens java.base/java.util=ALL-UNNAMED
							--add-opens java.base/java.time=ALL-UNNAMED
						</argLine>
						<trimStackTrace>false</trimStackTrace>
					</configuration>
				</plugin>

			</plugins>
		</pluginManagement>
        <plugins>
            <plugin>
                <groupId>org.reficio</groupId>
                <artifactId>p2-maven-plugin</artifactId>
                <version>2.1.0</version>
                <executions>
                    <execution>
                        <id>pack-repository</id>
                        <phase>package</phase>
                        <goals>
                            <goal>site</goal>
                        </goals>
                        
                        <configuration>
                            <categoryFileURL>${basedir}/category.xml</categoryFileURL>
							<p2>
								<artifact><id>org.eclipse.epsilon.common:${epsilon-version}</id></artifact>
								<artifact><id>org.eclipse.epsilon.common.dt:${epsilon-version}</id></artifact>
								<artifact><id>org.eclipse.epsilon.ecl.engine:${epsilon-version}</id></artifact>
								<artifact><id>org.eclipse.epsilon.egl.engine:${epsilon-version}</id></artifact>
								<artifact><id>org.eclipse.epsilon.emg.engine:${epsilon-version}</id></artifact>
								<artifact><id>org.eclipse.epsilon.emc.composite:${epsilon-version}</id></artifact>
								<artifact><id>org.eclipse.epsilon.emc.csv:${epsilon-version}</id></artifact>
								<artifact><id>org.eclipse.epsilon.emc.emf:${epsilon-version}</id></artifact>
								<artifact><id>org.eclipse.epsilon.emc.emf.decorator:${epsilon-version}</id></artifact>
								<artifact><id>org.eclipse.epsilon.emc.plainxml:${epsilon-version}</id></artifact>
								<artifact><id>org.eclipse.epsilon.emc.spreadsheets:${epsilon-version}</id></artifact>
								<artifact><id>org.eclipse.epsilon.eol.engine:${epsilon-version}</id></artifact>
								<artifact><id>org.eclipse.epsilon.eol.tools:${epsilon-version}</id></artifact>
								<artifact><id>org.eclipse.epsilon.eol.dt:${epsilon-version}</id></artifact>
								<artifact><id>org.eclipse.epsilon.etl.engine:${epsilon-version}</id></artifact>
								<artifact><id>org.eclipse.epsilon.evl.emf.validation:${epsilon-version}</id></artifact>
								<artifact><id>org.eclipse.epsilon.evl.engine:${epsilon-version}</id></artifact>
								<artifact><id>org.eclipse.epsilon.hutn.engine:${epsilon-version}</id></artifact>
								<artifact><id>org.eclipse.epsilon.hutn.model:${epsilon-version}</id></artifact>
								<artifact><id>org.eclipse.epsilon.antlr.postprocessor:${epsilon-version}</id></artifact>
								<artifact><id>org.eclipse.epsilon.antlr.postprocessor.model:${epsilon-version}</id></artifact>
								<artifact><id>org.eclipse.epsilon.egl.traceability.fine:${epsilon-version}</id></artifact>
								<artifact><id>org.eclipse.epsilon.emc.bibtex:${epsilon-version}</id></artifact>
								<artifact><id>org.eclipse.epsilon.emc.emf.virtual:${epsilon-version}</id></artifact>
								<artifact><id>org.eclipse.epsilon.emc.graphml:${epsilon-version}</id></artifact>
								<artifact><id>org.eclipse.epsilon.emc.hutn:${epsilon-version}</id></artifact>
								<artifact><id>org.eclipse.epsilon.emc.muddle:${epsilon-version}</id></artifact>
								<artifact><id>org.eclipse.epsilon.emc.simulink:${epsilon-version}</id></artifact>
								<artifact><id>org.eclipse.epsilon.emc.simulink.common:${epsilon-version}</id></artifact>
								<artifact><id>org.eclipse.epsilon.emc.simulink.dictionary:${epsilon-version}</id></artifact>
								<artifact><id>org.eclipse.epsilon.emc.simulink.requirement:${epsilon-version}</id></artifact>
								<artifact><id>org.eclipse.epsilon.emc.spreadsheets.excel:${epsilon-version}</id></artifact>
								<artifact><id>org.eclipse.epsilon.emc.spreadsheets.google:${epsilon-version}</id></artifact>
								<artifact><id>org.eclipse.epsilon.emc.uml:${epsilon-version}</id></artifact>
								<artifact><id>org.eclipse.epsilon.eml.engine:${epsilon-version}</id></artifact>
								<artifact><id>org.eclipse.epsilon.epl.engine:${epsilon-version}</id></artifact>
								<artifact><id>org.eclipse.epsilon.erl.engine:${epsilon-version}</id></artifact>
								<artifact><id>org.eclipse.epsilon.eunit.engine:${epsilon-version}</id></artifact>
								<artifact><id>org.eclipse.epsilon.ewl.emf:${epsilon-version}</id></artifact>
								<artifact><id>org.eclipse.epsilon.ewl.engine:${epsilon-version}</id></artifact>
								<artifact><id>org.eclipse.epsilon.flexmi:${epsilon-version}</id></artifact>
								<artifact><id>org.eclipse.epsilon.flock.engine:${epsilon-version}</id></artifact>
								<artifact><id>org.eclipse.epsilon.hutn.model.antlrAst:${epsilon-version}</id></artifact>
								<artifact><id>org.eclipse.epsilon.hutn.model.config:${epsilon-version}</id></artifact>
								<artifact><id>org.eclipse.epsilon.hutn.unparser:${epsilon-version}</id></artifact>
								<artifact><id>org.eclipse.epsilon.hutn.xmi:${epsilon-version}</id></artifact>
								<artifact><id>org.eclipse.epsilon.picto:${epsilon-version}</id></artifact>
								<artifact><id>org.eclipse.epsilon.pinset.engine:${epsilon-version}</id></artifact>
								<artifact><id>org.eclipse.epsilon.profiling:${epsilon-version}</id></artifact>
								<artifact><id>org.eclipse.epsilon.workflow:${epsilon-version}</id></artifact>
								<artifact><id>org.eclipse.epsilon.workflow.emf:${epsilon-version}</id></artifact>
							</p2>

                            <featureDefinitions>
                                <feature>
                                    <id>hu.blackbelt.epsilon.runtime.feature</id>
                                    <version>${project.version}</version>
                                    <label>Epsilon Runtime feature</label>
                                    <providerName>${project.groupId}</providerName>
                                    <description>${project.description}</description>
                                    <copyright>A copyright</copyright>
                                    <license>A licence</license>
                                    <generateSourceFeature>true</generateSourceFeature>
                                    <artifacts>

										<artifact>
											<id>hu.blackbelt.epsilon:epsilon-runtime-execution:${epsilon-runtime-version}</id>
                                            <transitive>true</transitive>
                                            <source>true</source>
                                            <!--                                        
											<override>true</override>
											-->
                                        </artifact>
										<artifact>
											<id>hu.blackbelt.epsilon:epsilon-runtime-utils:${epsilon-runtime-version}</id>
											<transitive>true</transitive>
											<source>true</source>
                                            <!--                                        
											<override>true</override>
											-->
										</artifact>
                                    </artifacts>
                                </feature>
                            </featureDefinitions>
                        </configuration>

                    </execution>
                </executions>
            </plugin>

            <plugin>
                <artifactId>maven-assembly-plugin</artifactId>
                <version>2.5.3</version>
                <configuration>
                    <descriptors>
                        <descriptor>src/assembly/assembly.xml</descriptor>
                    </descriptors>
                    <tarLongFileMode>posix</tarLongFileMode>
                </configuration>
                <executions>
                    <execution>
                        <id>compress</id>
                        <phase>package</phase>
                        <goals>
                            <goal>single</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>

			<!--
            <plugin>
                <groupId>org.mortbay.jetty</groupId>
                <artifactId>jetty-maven-plugin</artifactId>
                <version>8.1.5.v20120716</version>
                <configuration>
                    <scanIntervalSeconds>10</scanIntervalSeconds>
                    <webAppSourceDirectory>${basedir}/target/repository/</webAppSourceDirectory>
                    <webApp>
                        <contextPath>/site</contextPath>
                    </webApp>
                </configuration>
            </plugin>
            -->
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>flatten-maven-plugin</artifactId>
				<version>1.1.0</version>
				<configuration>
					<updatePomFile>true</updatePomFile>
					<flattenMode>resolveCiFriendliesOnly</flattenMode>
				</configuration>
				<executions>
					<execution>
						<id>flatten</id>
						<phase>process-resources</phase>
						<goals>
							<goal>flatten</goal>
						</goals>
					</execution>
					<execution>
						<id>flatten.clean</id>
						<phase>clean</phase>
						<goals>
							<goal>clean</goal>
						</goals>
					</execution>
				</executions>
			</plugin>

			<plugin>
				<groupId>org.jacoco</groupId>
				<artifactId>jacoco-maven-plugin</artifactId>
				<version>${jacoco.version}</version>
				<configuration>
					<propertyName>jacoco.agent</propertyName>
				</configuration>
				<executions>
					<execution>
						<id>jacoco-initialize</id>
						<goals>
							<goal>prepare-agent</goal>
						</goals>
					</execution>
					<execution>
						<id>jacoco-report</id>
						<goals>
							<goal>report</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
        </plugins>
    </build>

    <profiles>
		<profile>
			<id>sign-artifacts</id>
			<build>
				<plugins>
					<plugin>
						<groupId>org.simplify4u.plugins</groupId>
						<artifactId>sign-maven-plugin</artifactId>
						<version>1.0.1</version>
						<executions>
							<execution>
								<goals>
									<goal>sign</goal>
								</goals>
							</execution>
						</executions>
					</plugin>
				</plugins>
			</build>
		</profile>

		<profile>
			<id>release-dummy</id>
			<distributionManagement>
				<snapshotRepository>
					<id>dummy-distribution</id>
					<url>file:///tmp/${project.groupId}-${project.artifactId}-${project.version}/maven-snapshot/</url>
				</snapshotRepository>
				<repository>
					<id>dummy-distribution</id>
					<url>file:///tmp/${project.groupId}-${project.artifactId}-${project.version}/maven-release/</url>
				</repository>
			</distributionManagement>
		</profile>

		<profile>
			<id>release-judong</id>
			<distributionManagement>
				<snapshotRepository>
					<id>judong-nexus-distribution</id>
					<!--suppress UnresolvedMavenProperty -->
					<url>https://nexus.judo.technology/repository/maven-judong-snapshots/</url>
				</snapshotRepository>
				<repository>
					<id>judong-nexus-distribution</id>
					<!--suppress UnresolvedMavenProperty -->
					<url>https://nexus.judo.technology/repository/maven-judong-snapshots/</url>
				</repository>
			</distributionManagement>
		</profile>

		<profile>
			<id>release-central</id>
			<build>
				<plugins>
					<plugin>
						<groupId>org.sonatype.plugins</groupId>
						<artifactId>nexus-staging-maven-plugin</artifactId>
						<extensions>true</extensions>
						<configuration>
							<serverId>ossrh</serverId>
							<nexusUrl>https://oss.sonatype.org/</nexusUrl>
							<autoReleaseAfterClose>true</autoReleaseAfterClose>
							<stagingProgressTimeoutMinutes>15</stagingProgressTimeoutMinutes>
						</configuration>
					</plugin>
				</plugins>
			</build>
			<distributionManagement>
				<snapshotRepository>
					<id>ossrh</id>
					<url>https://oss.sonatype.org/content/repositories/snapshots</url>
				</snapshotRepository>
				<repository>
					<id>ossrh</id>
					<url>https://oss.sonatype.org/service/local/staging/deploy/maven2/</url>
				</repository>
			</distributionManagement>
		</profile>

		<profile>
			<id>release-p2-judong</id>
			<build>
				<plugins>
					<plugin>
						<groupId>org.codehaus.mojo</groupId>
						<artifactId>wagon-maven-plugin</artifactId>
						<executions>
							<execution>
								<id>upload-repository</id>
								<phase>deploy</phase>
								<goals>
									<goal>upload</goal>
								</goals>
								<configuration>
									<serverId>judong-nexus-distribution</serverId>
									<fromDir>${basedir}/target/repository</fromDir>
									<includes>*/**</includes>
									<url>dav:https://nexus.judo.technology/repository/p2-judong/</url>
									<toDir>${project-shortname}/${project.version}</toDir>
								</configuration>
							</execution>
						</executions>
					</plugin>
				</plugins>
			</build>
		</profile>

		<profile>
			<id>generate-github-asciidoc-diagrams</id>

			<properties>
				<asciidoctor.maven.plugin.version>2.2.2</asciidoctor.maven.plugin.version>
				<asciidoctorj.version>2.5.6</asciidoctorj.version>
				<asciidoctorj.diagram.version>2.2.3</asciidoctorj.diagram.version>
				<jruby.version>9.3.4.0</jruby.version>
			</properties>

			<build>
				<plugins>
					<plugin>
						<groupId>org.asciidoctor</groupId>
						<artifactId>asciidoctor-maven-plugin</artifactId>
						<version>${asciidoctor.maven.plugin.version}</version>
						<dependencies>
							<!-- Comment this section to use the default jruby artifact provided by the plugin -->
							<dependency>
								<groupId>org.jruby</groupId>
								<artifactId>jruby-complete</artifactId>
								<version>${jruby.version}</version>
							</dependency>
							<!-- Comment this section to use the default AsciidoctorJ artifact provided by the plugin -->
							<dependency>
								<groupId>org.asciidoctor</groupId>
								<artifactId>asciidoctorj</artifactId>
								<version>${asciidoctorj.version}</version>
							</dependency>
							<dependency>
								<groupId>org.asciidoctor</groupId>
								<artifactId>asciidoctorj-diagram</artifactId>
								<version>${asciidoctorj.diagram.version}</version>
							</dependency>
							<!-- Since asciidoctorj-diagram v2.2.0, uncomment to use specific version of plantuml or ditaa -->
							<dependency>
								<groupId>org.asciidoctor</groupId>
								<artifactId>asciidoctorj-diagram-plantuml</artifactId>
								<version>1.2022.5</version>
							</dependency>
							<dependency>
								<groupId>org.asciidoctor</groupId>
								<artifactId>asciidoctorj-diagram-ditaamini</artifactId>
								<version>1.0.3</version>
							</dependency>
						</dependencies>
						<configuration>
							<sourceDirectory>./.github</sourceDirectory>
							<requires>
								<require>asciidoctor-diagram</require>
							</requires>
							<attributes>
								<!-- Example below shows how to specify in this pom instead of System's PATH, the location of dot command of Graphviz, required by PlantUML libraries -->
								<!-- Windows:
                                    <graphvizdot>C:\Program Files (x86)\Graphviz2.38\bin\dot.exe</graphvizdot>
                                -->
								<!-- *nix :
                                    <graphvizdot>/usr/local/bin/dot</graphvizdot>
                                -->
							</attributes>
						</configuration>
						<executions>
							<execution>
								<id>generate-html-doc</id>
								<phase>generate-resources</phase>
								<goals>
									<goal>process-asciidoc</goal>
								</goals>
								<configuration>
									<backend>html5</backend>
									<attributes>
										<imagesdir>./images</imagesdir>
										<toc>left</toc>
										<icons>font</icons>
										<sectanchors>true</sectanchors>
										<idprefix />
										<idseparator>-</idseparator>
									</attributes>
								</configuration>
							</execution>
						</executions>
					</plugin>

					<plugin>
						<artifactId>maven-resources-plugin</artifactId>
						<version>3.3.0</version>
						<executions>
							<execution>
								<id>copy-generated-gitflow-diagrams</id>
								<phase>generate-resources</phase>
								<goals>
									<goal>copy-resources</goal>
								</goals>

								<configuration>
									<outputDirectory>${basedir}/.github</outputDirectory>
									<resources>
										<resource>
											<directory>${basedir}/target/generated-docs/images/</directory>
											<includes>
												<include>*.png</include>
											</includes>
										</resource>
									</resources>
								</configuration>
							</execution>
						</executions>
					</plugin>
				</plugins>
			</build>
		</profile>

		<profile>
			<id>update-source-code-license</id>
			<build>
				<plugins>
					<plugin>
						<groupId>org.codehaus.mojo</groupId>
						<artifactId>license-maven-plugin</artifactId>
						<version>2.0.0</version>
						<configuration>
							<verbose>true</verbose>
							<addSvnKeyWords>false</addSvnKeyWords>
							<organizationName>BlackBelt Technology</organizationName>
							<inceptionYear>2018</inceptionYear>
						</configuration>
						<executions>
							<execution>
								<id>first</id>
								<goals>
									<goal>update-file-header</goal>
								</goals>
								<phase>process-sources</phase>
								<configuration>
									<licenseName>epl_v2</licenseName>
									<excludes>
										<exclude>**/*.json</exclude>
									</excludes>
								</configuration>
							</execution>
							<execution>
								<id>second</id>
								<goals>
									<goal>update-project-license</goal>
								</goals>
								<phase>process-sources</phase>
								<configuration>
									<licenseName>epl_v2</licenseName>
								</configuration>
							</execution>
						</executions>
					</plugin>
				</plugins>
			</build>
		</profile>
    </profiles>
</project>